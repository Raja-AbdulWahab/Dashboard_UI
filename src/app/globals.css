/* src/app/globals.css (annotated)
   I only added filename / component comments above the related CSS blocks.
   No selectors or values were changed â€” behavior and responsiveness remain identical.
*/

/* =========================
   globals: design tokens & reset (src/app/globals.css)
   ========================= */
:root {
  --bg: #f4f6f8;
  --card-bg: #ffffff;
  --muted: #6b7280;
  --accent-blue: #0f79b8;
  /* main blue number */
  --accent-blue-soft: #e6f3fb;
  /* left small icon bg */
  --tab-orange: #ef6b2e;
  /* orange tab */
  --red: #d64545;
  /* red bar */
  --table-head: #dff3f6;
  /* pale cyan header */
  --panel-border: rgba(15, 21, 28, 0.06);
  --card-shadow: 0 6px 18px rgba(9, 30, 66, 0.08);
}

/* Basic reset */
* {
  box-sizing: border-box
}

html,
body,
#root {
  height: 100%
}

body {
  margin: 0;
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  background: var(--bg);
  color: #0b1220;
  -webkit-font-smoothing: antialiased;
}

/* Prevent any horizontal overflow globally */
html,
body {
  overflow-x: hidden;
}

/* =========================
   Layout container (src/app/dashboard/page.tsx)
   ========================= */
.dashboard-top {
  max-width: 1500px;
  margin: 20px auto;
  padding: 8px;
}

/* =========================
   Grid: top row (TopKpiStack + PerformersBox/AreasCard + SummaryTable)
   ========================= */
/* grid: left stacked KPIs (260px) | middle two small columns (flex) | right table (420px)
   Default layout (desktop) */
.top-row-grid {
  display: grid;
  grid-template-columns: 320px 1fr 420px; /* Increased KPI stack width */
  gap: 16px;
  align-items: stretch;
}
/* Allow grid children to shrink instead of forcing overflow */
.top-row-grid > * {
  min-width: 0; /* ðŸ”‘ prevents children from forcing the grid wider */
}

/* Drop summary panel below before table columns collapse.
   This triggers earlier than the mobile stacking so the table gains its own row
   instead of getting squashed. Tweak 1200px if you want the change earlier/later.
*/
@media (max-width: 1200px) {
  .top-row-grid {
    /* keep KPI + middle column but remove right column */
    grid-template-columns: 320px 1fr;
    gap: 16px;
    align-items: start;
  }

  .summary-panel {
    /* move summary to its own full-width row */
    grid-column: 1 / -1;
    width: 100%;
    order: 3;
    /* allow horizontal scroll inside summary if content is wide */
    overflow-x: auto;
  }

  /* make sure tables inside summary can expand and be scrolled horizontally */
  .summary-panel .summary-table,
  .table-panel .agents-table {
    width: 100%;
    table-layout: auto;
    min-width: 600px; /* prevents early column collapse â€” adjust if needed */
  }
}


/* =========================
   Component: TopKpiStack (src/components/TopKpiStack.tsx)
   ========================= */
/* KPI card (left stacked) */
.kpi-card {
  background: var(--card-bg);
  border-radius: 14px;
  padding: 18px;
  border: 1px solid var(--panel-border);
  box-shadow: var(--card-shadow);
  display: flex;
  gap: 12px;
  align-items: center;
}

/* small circular icon area on left of KPI */
.kpi-icon {
  width: 58px;
  height: 58px;
  border-radius: 50%;
  background: var(--accent-blue-soft);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

/* big numeric value on KPI */
.kpi-value {
  color: var(--accent-blue);
  font-weight: 700;
  font-size: 28px;
  line-height: 1;
}

/* small label below value */
.kpi-label {
  color: var(--muted);
  font-size: 13px;
}

/* Column that stacks multiple KPI cards vertically */
.kpi-stack {
  display: flex;
  flex-direction: column;
  gap: 14px;
}

/* =========================
   Component: PerformersBox (src/components/PerformersBox.tsx)
   ========================= */
/* mid column: top performer and low performer + areas card placed side-by-side as rows */
.mid-column {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 14px;
}

/* performer card (green/blue donut mock) */
.performer-card {
  background: var(--card-bg);
  border-radius: 12px;
  padding: 14px;
  border: 1px solid var(--panel-border);
  box-shadow: var(--card-shadow);
  display: flex;
  gap: 12px;
  align-items: center;
}

/* donut placeholder */
.donut {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.donut-inner {
  width: 54px;
  height: 54px;
  border-radius: 50%;
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 700;
  font-size: 14px;
  position: absolute;
}
/* Performer avatar icon styles */
.avatar-icon {
  width: 36px;
  height: 36px;
  border: 2px solid #4a90e2;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent; /* no fill */
}

.avatar-user-icon {
  color: #4a90e2;
  opacity: 0.8;
}

/* Smaller outline icons under performer card */
.avatar-icon-small {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
}


/* =========================
   Component: AreasCard (src/components/AreasCard.tsx)
   ========================= */
/* areas card (orange tab on top area) */
.areas-card {
  background: var(--card-bg);
  border-radius: 12px;
  padding: 12px 14px;
  border: 1px solid var(--panel-border);
  box-shadow: var(--card-shadow);
}

/* areas tab row */
.areas-tabs {
  display: flex;
  gap: 0px;
  margin-bottom: 10px;
  align-items: center;
}

.tab-inactive {
  background: transparent;
  border: 1px solid var(--panel-border);
  color: var(--muted);
}

.tab-inactive {
  background: transparent;
  border: 1px solid var(--panel-border);
  color: var(--muted);
}

/* areas list row */
.area-row {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 10px;
}

.area-desc {
  flex: 1;
  color: #172B4D;
  font-size: 13px
}

.area-percent {
  width: 46px;
  text-align: right;
  color: var(--muted);
  font-size: 12px
}

/* red progress bar */
.area-bar-wrap {
  background: #f1f1f1;
  height: 6px;
  border-radius: 6px;
  overflow: hidden;
  margin-top: 6px;
}

.area-bar {
  height: 6px;
  border-radius: 6px;
}

/* base tab style */
.tab-base {
  padding: 6px 12px;
  font-weight: 600;
  font-size: 13px;
  cursor: pointer;
  flex: 1;
  /* equal width tabs */
  text-align: center;
}

/* Improvement tab (orange, left rounded only) */
.tab-active-improvement {
  background: var(--tab-orange);
  color: #fff;
  border: 1px solid var(--tab-orange);
  border-radius: 5px 0 0 5px;
}

/* Excellence tab (green, right rounded only) */
.tab-active-excellence {
  background: #28a745;
  /* green */
  color: #fff;
  border: 1px solid #28a745;
  border-radius: 0 5px 5px 0;
}

/* improvement = orange */
.bar-improvement {
  background: var(--tab-orange);
}

/* excellence = green */
.bar-excellence {
  background: #28a745;
}


/* =========================
   Component: SummaryTable (src/components/SummaryTable.tsx)
   ========================= */
/* summary table (right) */
.summary-panel {
  background: var(--card-bg);
  border-radius: 12px;
  padding: 12px;
  border: 1px solid var(--panel-border);
  box-shadow: var(--card-shadow);
}

.summary-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 13px;
  color: #172B4D;
}

.summary-table thead th {
  background: var(--table-head);
  padding: 10px;
  text-align: left;
  font-weight: 600;
  font-size: 13px;
}

.summary-table tbody td {
  padding: 12px 10px;
  border-top: 1px solid #f1f4f6;
}

/* =========================
   Responsive stacking: medium -> tablet -> small
   - At <=1200px summary drops below (handled above)
   - At <=980px keep order: KPI, mid, summary (summary already full width)
   - At <=768px convert top-row-grid to column (KPI, Performer, Areas stacked)
   - At <=600px finalize small-screen rules
   ========================= */

   @media (max-width: 1024px) and (min-width: 981px) {
  .top-row-grid {
    grid-template-columns: 260px 1fr minmax(320px, 360px);
    gap: 14px;
  }

  .summary-panel {
    max-width: 100%;
    margin-right: 8px;
    overflow-x: auto; /* âœ… horizontal scroll if needed */
  }

  .summary-table {
    width: 100%;
    table-layout: auto;
  }
}

@media (max-width: 980px) {
  /* keep KPI first, mid second and summary below (full width) */
  .top-row-grid {
    grid-template-columns: 320px 1fr; /* KPI + mid */
    grid-auto-rows: auto;
    gap: 16px;
    align-items: start;
  }
  .kpi-stack { order: 1; }
  .mid-column { order: 2; }
  .summary-panel { order: 3; grid-column: 1 / -1; width: 100%; overflow-x: auto; }

  /* allow children to shrink correctly */
  .top-row-grid > * { min-width: 0; }

  /* table behavior */
  .summary-panel .summary-table,
  .table-panel .agents-table {
    width: 100%;
    table-layout: auto;
    min-width: 600px; /* if your table is wider, increase this */
  }
}

@media (max-width: 768px) {
  /* switch to a column (stacked) layout */
  .top-row-grid {
    display: flex !important;
    flex-direction: column !important;
    gap: 16px;
  }

  .kpi-stack,
  .mid-column,
  .summary-panel {
    width: 100% !important;
  }

  /* Performer & Areas stacked, full width */
  .mid-column {
    display: flex;
    flex-direction: column;
    gap: 14px;
  }

  .performer-card,
  .areas-card {
    width: 100% !important;
  }

  .summary-panel,
  .table-panel {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}

@media (max-width: 600px) {
  .dashboard-top { max-width: 100%; padding: 8px; }

  .top-row-grid { grid-template-columns: 1fr; gap: 12px; }

  .second-row-grid { display: flex; flex-direction: column; gap: 16px; }

  .chart-panel,
  .table-panel,
  .summary-panel {
    width: 100% !important;
    max-width: 100% !important;
  }

  .summary-table th,
  .summary-table td {
    font-size: 12px;
    padding: 6px 8px;
    white-space: normal;
    word-break: break-word;
  }
}



/* small entrance animation */
.fade-in-up {
  animation: fadeInUp 450ms ease both;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(8px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* =========================
   Component: CallTrendsChart (src/components/CallTrendsChart.tsx)
   Second row grid (chart + agents table)
   ========================= */
.second-row-grid {
  display: grid;
  grid-template-columns: 1fr 420px;
  /* left flexible, right fixed same as SummaryTable */
  gap: 20px;
  margin-top: 25px;
  align-items: start;
}

/* Chart panel */
.chart-panel {
  height: 360px;
  /* increased to fit visually with 10 rows table */
  display: flex;
  flex-direction: column;
  background: transparent;
  border: none;
  box-shadow: none;
  padding: 0;
}

/* =========================
   Component: AgentsTable (src/components/AgentsTable.tsx)
   ========================= */
/* Agents table panel */
.table-panel {
  background: var(--card-bg);
  border-radius: 12px;
  box-shadow: var(--card-shadow);
  height: 360px;
  /* keep consistent height with chart */
  display: flex;
  flex-direction: column;
  overflow-x: auto;
}

/* Scrollable body */
.table-panel .table-scroll {
  flex: 1;
  overflow-y: auto;
  padding: 0;
}

/* Responsive: stack chart + agents table on smaller screens */
@media (max-width: 980px) {
  .second-row-grid {
    grid-template-columns: 1fr;
  }

  .chart-panel,
  .table-panel {
    height: auto;
    /* allow natural height when stacked */
  }
}

/* =========================
   Component: TopTeamsRow (src/components/TopTeamsRow.tsx)
   ========================= */
/* Wrapper that keeps title + cards in the same row */
.teams-row-wrapper {
  display: grid;
  grid-template-columns: auto 1fr;
  /* title auto-width, cards fill remaining */
  align-items: start;
  /* title aligns to top row of cards */
  gap: 18px;
  margin-bottom: 20px;
  max-width: 100%;
  overflow-x: hidden;
}

.team-card {
  color: black;
  padding: 16px;
  border-radius: 12px 12px 8px 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  width: auto;
  flex: 0 0 auto;
  max-width: 100%;
  /* prevent individual card overflow */
  word-break: break-word;
  /* wrap long text */
}

/* Color variations */
.performance-high {
  background: #d4edda;
  /* green for high (>=90%) */
}

.performance-medium {
  background: #ffe0b2;
  /* orange for medium (75â€“89%) */
}

.performance-low {
  background: #f8d7da;
  /* red for low (<75%) */
}

.team-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25);
}

.teams-title {
  font-size: 18px;
  font-weight: 700;
  margin: 0;
  white-space: nowrap;
  /* keep on one line */
  align-self: center;
  /* vertically center with first row cards */
}

/* âœ… Change grid â†’ flex so cards can size to text */
/* âœ… Fix horizontal scroll on mobile for teams row */
.teams-row {
  display: flex;
  flex-wrap: wrap;
  gap: 18px;
  align-items: flex-start;
  max-width: 100%;
  /* prevent overflow */
  overflow-x: hidden;
  /* hide horizontal scroll if any */
}

/* --- Top Teams Row Scroll --- */
.teams-row-scroll {
  display: flex;
  gap: 12px;
  overflow-x: auto;
  padding-bottom: 6px;
  scrollbar-width: none;
  /* Firefox */
}

.teams-row-scroll::-webkit-scrollbar {
  display: none;
  /* Chrome, Safari */
}

.team-card {
  flex: 0 0 auto;
  /* prevent shrinking */
  min-width: 200px;
  max-width: 240px;
  border-radius: 8px;
  padding: 12px;
  transition: transform 0.2s ease;
  color: #fff;
  /* keep text visible on colored backgrounds */
}

/* âœ… Performance-based background colors (restored) */
.performance-high {
  background: #d4edda;
  /* green for high (>=90%) */
  color: #000;
}

.performance-medium {
  background: #ffe0b2;
  /* orange for medium (75â€“89%) */
  color: #000;

}

.performance-low {
  background: #f8d7da;
  /* red for low (<75%) */
  color: #000;
}


/* âœ… Responsive for medium + small screens */
@media (max-width: 1024px) {
  .teams-row-wrapper {
    grid-template-columns: 1fr;
    /* stack title above cards */
  }

  .teams-title {
    margin-bottom: 12px;
  }

  .teams-row {
    flex-direction: column;
    /* full-width stacked cards */
  }

  .team-card {
    width: 100%;
    /* take full width */
    max-width: 100%;
    flex: unset;
    /* override auto sizing */
  }
}



/* ========================= 
Component: FilterRow (src/components/FilterRow.tsx) 
========================= */
.filter-row {
  display: flex;
  gap: 16px;
  align-items: flex-end;
  margin-bottom: 24px;
  flex-wrap: wrap;
  /* responsive */
}

.filter-item {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.filter-label {
  font-size: 13px;
  font-weight: 600;
  color: #333;
}

/* Dropdown base */
.filter-select {
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 14px;
  min-width: 160px;
  outline: none;
  background-color: #fff;
  appearance: none;
  background: url("data:image/svg+xml;utf8,<svg fill='%23333' height='20' viewBox='0 0 24 24' width='20' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>") no-repeat right 10px center;
  background-size: 16px;
}

.filter-select:focus {
  border-color: #ef6b2e;
  box-shadow: 0 0 0 2px rgba(239, 107, 46, 0.2);
}

/* Search button (orange) */
.filter-btn {
  height: 36px;
  padding: 0 16px;
  background: #ef6b2e !important;
  color: white;
  font-size: 14px;
  font-weight: 600;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.2s ease;
  align-self: flex-end;
  display: flex;
  align-items: center;
  justify-content: center;
}

.filter-btn:hover {
  background: #d95b1f !important;
}

/* âœ… Default small screen (mobile) stacking */
@media (max-width: 768px) {
  .filter-row {
    flex-direction: column;
    align-items: stretch;
  }

  .filter-item {
    width: 100%;
  }

  .filter-select,
  .filter-btn {
    width: 100%;
  }
}

/* âœ… Specific Fix: iPad Mini (portrait and nearby) */
@media only screen and (min-width: 760px) and (max-width: 820px) and (orientation: portrait) {
  .filter-row {
    flex-direction: column !important;
    align-items: stretch !important;
  }

  .filter-item {
    width: 100% !important;
  }

  .filter-select,
  .filter-btn {
    width: 100% !important;
    max-width: 100% !important;
    display: block !important;
  }
}

